#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª–Ω–æ–≥–æ —Ä–∞–±–æ—á–µ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞ –∞–Ω–∞–ª–∏–∑–∞ –∫–ª–∏–µ–Ω—Ç–∞ —Å –¥–Ω–µ–º —Ä–æ–∂–¥–µ–Ω–∏—è
"""

import json
import logging
from datetime import datetime
from old_client_card_analyzer import ClientCardAnalyzer, calculate_birthday_discount_status

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')

def load_test_client_data(file_path):
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –∫–ª–∏–µ–Ω—Ç–∞ –∏–∑ JSON —Ñ–∞–π–ª–∞"""
    try:
        with open(file_path, 'r', encoding='utf-8') as f:
            client_data = json.load(f)
        return client_data
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö: {e}")
        return None

def demonstrate_birthday_discount_flow():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –ø–æ–ª–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å —Å –¥–Ω–µ–º —Ä–æ–∂–¥–µ–Ω–∏—è"""
    print("=" * 80)
    print("–î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –ü–û–õ–ù–û–ì–û –ü–†–û–¶–ï–°–°–ê –ê–ù–ê–õ–ò–ó–ê –ö–õ–ò–ï–ù–¢–ê –° –î–ù–ï–ú –†–û–ñ–î–ï–ù–ò–Ø")
    print("=" * 80)
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    test_data_file = "test_client_with_birthday.json"
    client_data = load_test_client_data(test_data_file)
    
    if not client_data:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ")
        return
    
    print(f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –∫–ª–∏–µ–Ω—Ç–∞: {client_data.get('first_name')} (ID: {client_data.get('conv_id')})")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –¥–Ω–µ —Ä–æ–∂–¥–µ–Ω–∏—è
    birth_day = client_data.get('birth_day')
    birth_month = client_data.get('birth_month')
    
    if birth_day and birth_month:
        print(f"üìÖ –î–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–∞: {birth_day}.{birth_month:02d}")
        
        # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å —Å–∫–∏–¥–∫–∏
        birthday_status = calculate_birthday_discount_status(birth_day, birth_month)
        
        print(f"üéÅ –°—Ç–∞—Ç—É—Å —Å–∫–∏–¥–∫–∏ –Ω–∞ –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è: {birthday_status['status']}")
        print(f"üìç –î–Ω–µ–π –¥–æ –¥–Ω—è —Ä–æ–∂–¥–µ–Ω–∏—è: {birthday_status.get('days_until_birthday')}")
        
        if birthday_status['message']:
            print(f"üí¨ –°–æ–æ–±—â–µ–Ω–∏–µ –æ —Å–∫–∏–¥–∫–µ:")
            print(f"   {birthday_status['message']}")
        else:
            print("üí¨ –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –æ —Å–∫–∏–¥–∫–µ")
    else:
        print("‚ö†Ô∏è –î–∞–Ω–Ω—ã–µ –æ –¥–Ω–µ —Ä–æ–∂–¥–µ–Ω–∏—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç")
    
    print("\n" + "-" * 80)
    print("–§–û–†–ú–ò–†–û–í–ê–ù–ò–ï –ö–ê–†–¢–û–ß–ö–ò –ö–õ–ò–ï–ù–¢–ê –î–õ–Ø –ê–ù–ê–õ–ò–ó–ê")
    print("-" * 80)
    
    # –°–æ–∑–¥–∞–µ–º –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä (–±–µ–∑ —Ä–µ–∞–ª—å–Ω–æ–≥–æ –≤—ã–∑–æ–≤–∞ AI - —Ç–æ–ª—å–∫–æ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö)
    try:
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º, –∫–∞–∫ –±—É–¥—É—Ç –≤—ã–≥–ª—è–¥–µ—Ç—å –¥–∞–Ω–Ω—ã–µ –≤ –∫–∞—Ä—Ç–æ—á–∫–µ –∫–ª–∏–µ–Ω—Ç–∞
        client_card_summary = f"""
=== –ö–ê–†–¢–û–ß–ö–ê –ö–õ–ò–ï–ù–¢–ê ===
–ò–º—è: {client_data.get('first_name', '')} {client_data.get('last_name', '')}
–ì–æ—Ä–æ–¥: {client_data.get('city', '–Ω–µ —É–∫–∞–∑–∞–Ω')}
"""
        
        if birth_day and birth_month:
            client_card_summary += f"–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è: {birth_day}.{birth_month:02d}\n"
        
        client_card_summary += f"""–ö–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏—è –ª–∏–¥–∞: {client_data.get('lead_qualification', '–Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞')}
–≠—Ç–∞–ø –≤–æ—Ä–æ–Ω–∫–∏: {client_data.get('funnel_stage', '–Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω')}
–£—Ä–æ–≤–µ–Ω—å –∫–ª–∏–µ–Ω—Ç–∞: {', '.join(client_data.get('client_level', []))}
–¶–µ–ª–∏ –æ–±—É—á–µ–Ω–∏—è: {', '.join(client_data.get('learning_goals', []))}
–ë–æ–ª–∏ –∫–ª–∏–µ–Ω—Ç–∞: {', '.join(client_data.get('client_pains', []))}

–ö—Ä–∞—Ç–∫–æ–µ —Å–∞–º–º–∞—Ä–∏ –¥–∏–∞–ª–æ–≥–∞:
{client_data.get('dialogue_summary', '–Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö')}
"""
        
        print("‚úÖ –ö–∞—Ä—Ç–æ—á–∫–∞ –∫–ª–∏–µ–Ω—Ç–∞ —Ç–µ–ø–µ—Ä—å –≤–∫–ª—é—á–∞–µ—Ç –í–°–Æ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏–∑ –ë–î:")
        print(client_card_summary)
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
        recent_messages = client_data.get('recent_messages', [])
        if recent_messages:
            print("=== –ü–û–°–õ–ï–î–ù–Ø–Ø –ò–°–¢–û–†–ò–Ø –î–ò–ê–õ–û–ì–ê ===")
            for msg in recent_messages[-5:]:  # –ü–æ—Å–ª–µ–¥–Ω–∏–µ 5 —Å–æ–æ–±—â–µ–Ω–∏–π
                sender = "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å" if msg['sender'] == 'user' else "–ú–æ–¥–µ–ª—å"
                print(f"{sender}: {msg['text']}")
        
        # –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ç–æ–≥–æ, –∫–∞–∫ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∫–∏–¥–∫–µ –≤–∫–ª—é—á–∞–µ—Ç—Å—è –≤ –∞–Ω–∞–ª–∏–∑
        print("\n" + "-" * 80)
        print("–ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –°–ö–ò–î–ö–ï –í –ê–ù–ê–õ–ò–ó–ï")
        print("-" * 80)
        
        if birthday_status['message']:
            print("‚úÖ –í –ø—Ä–æ–º–ø—Ç –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Å–∫–∏–¥–∫–µ:")
            print(f"   {birthday_status['message']}")
        else:
            print("‚ÑπÔ∏è –í –ø—Ä–æ–º–ø—Ç –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–æ: '–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–∫–∏–¥–æ–∫ –Ω–∞ –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è.'")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–º–µ—Ä —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –∞–Ω–∞–ª–∏–∑–∞
        mock_analysis_result = {
            "lead_qualification": client_data.get('lead_qualification'),
            "funnel_stage": client_data.get('funnel_stage'),
            "client_level": client_data.get('client_level'),
            "learning_goals": client_data.get('learning_goals'),
            "client_pains": client_data.get('client_pains'),
            "birthday_discount_info": {
                "status": birthday_status.get('status'),
                "message": birthday_status.get('message'),
                "days_until_birthday": birthday_status.get('days_until_birthday'),
                "birthday_formatted": birthday_status.get('birthday_formatted')
            },
            "action_priority": "–≤—ã—Å–æ–∫–∏–π" if birthday_status.get('status') == 'active' else "—Å—Ä–µ–¥–Ω–∏–π",
            "next_steps": [
                "–ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å —Å–∫–∏–¥–∫—É –Ω–∞ –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è" if birthday_status.get('status') == 'active' else "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–µ —Å –¥–Ω–µ–º —Ä–æ–∂–¥–µ–Ω–∏—è",
                "–ü–æ–º–æ—á—å —Å –≤—ã–±–æ—Ä–æ–º –∫—É—Ä—Å–∞",
                "–û—Ñ–æ—Ä–º–∏—Ç—å –ø–æ–∫—É–ø–∫—É"
            ]
        }
        
        print("\n‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç –∞–Ω–∞–ª–∏–∑–∞ —Ç–µ–ø–µ—Ä—å –≤–∫–ª—é—á–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –¥–Ω–µ —Ä–æ–∂–¥–µ–Ω–∏—è:")
        print(json.dumps(mock_analysis_result, ensure_ascii=False, indent=2))
        
        print("\n" + "=" * 80)
        print("üéâ –£–°–ü–ï–®–ù–ê–Ø –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø!")
        print("‚úÖ –î–∞–Ω–Ω—ã–µ –æ –¥–Ω–µ —Ä–æ–∂–¥–µ–Ω–∏—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –∏–∑–≤–ª–µ–∫–∞—é—Ç—Å—è –∏–∑ –ë–î")
        print("‚úÖ –°–∫–∏–¥–∫–∞ –Ω–∞ –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è")  
        print("‚úÖ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –≤–∫–ª—é—á–∞–µ—Ç—Å—è –≤ –∫–∞—Ä—Ç–æ—á–∫—É –∫–ª–∏–µ–Ω—Ç–∞")
        print("‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ —Å–∫–∏–¥–∫–µ –ø–æ–¥—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è –≤ –ø—Ä–æ–º–ø—Ç")
        print("‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç –∞–Ω–∞–ª–∏–∑–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç –ø–æ–ª–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –¥–Ω–µ —Ä–æ–∂–¥–µ–Ω–∏—è")
        print("=" * 80)
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏: {e}")
        import traceback
        traceback.print_exc()
        return False

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    success = demonstrate_birthday_discount_flow()
    
    if success:
        print("\nüéÇ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π —Å–∫–∏–¥–æ–∫ –Ω–∞ –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è!")
    else:
        print("\n‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã, —Ç—Ä–µ–±—É—é—â–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è.")

if __name__ == "__main__":
    main()