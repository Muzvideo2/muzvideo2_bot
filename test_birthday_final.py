#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç —Ñ—É–Ω–∫—Ü–∏–∏ —Ä–∞—Å—á–µ—Ç–∞ —Å–∫–∏–¥–æ–∫ –Ω–∞ –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è
"""

import sys
from datetime import datetime

def calculate_birthday_discount_status(birth_day, birth_month, current_date=None):
    """–§—É–Ω–∫—Ü–∏—è —Ä–∞—Å—á–µ—Ç–∞ —Å–∫–∏–¥–æ–∫ —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é –ø–µ—Ä–µ–¥–∞—Ç—å —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É"""
    if not birth_day or not birth_month:
        return {
            'status': 'not_applicable',
            'message': '',
            'days_until_birthday': None,
            'birthday_formatted': ''
        }
    
    try:
        if current_date is None:
            current_date = datetime.now()
        
        current_year = current_date.year
        
        try:
            birthday_this_year = datetime(current_year, birth_month, birth_day)
        except ValueError:
            if birth_month == 2 and birth_day == 29:
                birthday_this_year = datetime(current_year, 2, 28)
            else:
                return {
                    'status': 'not_applicable',
                    'message': '',
                    'days_until_birthday': None,
                    'birthday_formatted': ''
                }
        
        # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º —Ä–∞–∑–Ω–æ—Å—Ç—å –≤ –¥–Ω—è—Ö –æ—Ç —Ç–µ–∫—É—â–µ–π –¥–∞—Ç—ã –¥–æ –¥–Ω—è —Ä–æ–∂–¥–µ–Ω–∏—è –≤ —ç—Ç–æ–º –≥–æ–¥—É
        current_date_start = current_date.replace(hour=0, minute=0, second=0, microsecond=0)
        days_until_birthday_this_year = (birthday_this_year - current_date_start).days
        
        # –ï—Å–ª–∏ –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è –±—ã–ª –Ω–µ–¥–∞–≤–Ω–æ (–≤ –ø—Ä–µ–¥–µ–ª–∞—Ö 5 –¥–Ω–µ–π), –∏—Å–ø–æ–ª—å–∑—É–µ–º –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
        if -5 <= days_until_birthday_this_year <= 5:
            days_until_birthday = days_until_birthday_this_year
            actual_birthday = birthday_this_year
        else:
            # –ï—Å–ª–∏ –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è —É–∂–µ –ø—Ä–æ—à–µ–ª –¥–∞–≤–Ω–æ, –±–µ—Ä–µ–º —Å–ª–µ–¥—É—é—â–∏–π –≥–æ–¥
            if birthday_this_year < current_date_start:
                try:
                    actual_birthday = datetime(current_year + 1, birth_month, birth_day)
                except ValueError:
                    if birth_month == 2 and birth_day == 29:
                        actual_birthday = datetime(current_year + 1, 2, 28)
                days_until_birthday = (actual_birthday - current_date_start).days
            else:
                days_until_birthday = days_until_birthday_this_year
                actual_birthday = birthday_this_year
        birthday_formatted = f"{birth_day}.{birth_month:02d}"
        
        if -5 <= days_until_birthday <= 5:
            if days_until_birthday == 0:
                status_text = "–¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è"
            elif days_until_birthday > 0:
                status_text = f"—á–µ—Ä–µ–∑ {days_until_birthday} –¥–Ω. ({birthday_formatted}) –±—É–¥–µ—Ç –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è"
            else:
                status_text = f"{abs(days_until_birthday)} –¥–Ω. –Ω–∞–∑–∞–¥ ({birthday_formatted}) –±—ã–ª –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è"
            
            message = f"–£ –∫–ª–∏–µ–Ω—Ç–∞ {status_text}. –ü—Ä—è–º–æ —Å–µ–π—á–∞—Å –¥–ª—è –Ω–µ–≥–æ –¥–µ–π—Å—Ç–≤—É–µ—Ç —Å–∫–∏–¥–∫–∞ 35% –Ω–∞ –ª—é–±–æ–π –∫—É—Ä—Å –∏–ª–∏ –Ω–∞–±–æ—Ä. –°–∫–∏–¥–∫–∞ –¥–µ–π—Å—Ç–≤—É–µ—Ç 10 –¥–Ω–µ–π: 5 –¥–Ω–µ–π –¥–æ –¥–Ω—è —Ä–æ–∂–¥–µ–Ω–∏—è –∏ 5 –¥–Ω–µ–π –ø–æ—Å–ª–µ. –ü—Ä–æ–º–æ–∫–æ–¥ DR-2025 –¥–µ–π—Å—Ç–≤—É–µ—Ç —Ç–æ–ª—å–∫–æ –≤ —ç—Ç–∏ 10 –¥–Ω–µ–π."
            
            return {
                'status': 'active',
                'message': message,
                'days_until_birthday': days_until_birthday,
                'birthday_formatted': birthday_formatted
            }
        
        elif 6 <= days_until_birthday <= 20:
            message = f"–£ –∫–ª–∏–µ–Ω—Ç–∞ —á–µ—Ä–µ–∑ {days_until_birthday} –¥–Ω–µ–π ({birthday_formatted}) –±—É–¥–µ—Ç –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è. –°–∫–∏–¥–∫–∞ –ø–æ —Å–ª—É—á–∞—é –¥–Ω—è —Ä–æ–∂–¥–µ–Ω–∏—è —Å–æ—Å—Ç–∞–≤–∏—Ç 35% –Ω–∞ –ª—é–±–æ–π –∫—É—Ä—Å –∏–ª–∏ –Ω–∞–±–æ—Ä. –°–∫–∏–¥–∫–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç 10 –¥–Ω–µ–π: 5 –¥–Ω–µ–π –¥–æ –¥–Ω—è —Ä–æ–∂–¥–µ–Ω–∏—è –∏ 5 –¥–Ω–µ–π –ø–æ—Å–ª–µ. –ü—Ä–æ–º–æ–∫–æ–¥ DR-2025 –¥–µ–π—Å—Ç–≤—É–µ—Ç —Ç–æ–ª—å–∫–æ –≤ —ç—Ç–∏ 10 –¥–Ω–µ–π."
            
            return {
                'status': 'upcoming',
                'message': message,
                'days_until_birthday': days_until_birthday,
                'birthday_formatted': birthday_formatted
            }
        
        else:
            return {
                'status': 'not_applicable',
                'message': '–£ –∫–ª–∏–µ–Ω—Ç–∞ –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è –Ω–µ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è. –°–∫–∏–¥–∫–∞ –ø–æ —Å–ª—É—á–∞—é –¥–Ω—è —Ä–æ–∂–¥–µ–Ω–∏—è –Ω–µ –¥–µ–π—Å—Ç–≤—É–µ—Ç.',
                'days_until_birthday': days_until_birthday,
                'birthday_formatted': birthday_formatted
            }
    
    except Exception as e:
        return {
            'status': 'not_applicable',
            'message': '',
            'days_until_birthday': None,
            'birthday_formatted': ''
        }

def test_birthday_function():
    """–¢–µ—Å—Ç —Ñ—É–Ω–∫—Ü–∏–∏ —Ä–∞—Å—á–µ—Ç–∞ —Å–∫–∏–¥–æ–∫"""
    print("üéÇ –§–ò–ù–ê–õ–¨–ù–´–ô –¢–ï–°–¢ –†–ê–°–ß–ï–¢–ê –°–ö–ò–î–û–ö –ù–ê –î–ï–ù–¨ –†–û–ñ–î–ï–ù–ò–Ø\n")
    
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—É—é –¥–∞—Ç—É –¥–ª—è —Ç–µ—Å—Ç–æ–≤
    test_date = datetime(2025, 8, 27)
    
    test_cases = [
        (27, 8, "active", "–î–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è —Å–µ–≥–æ–¥–Ω—è"),
        (1, 9, "active", "–ß–µ—Ä–µ–∑ 5 –¥–Ω–µ–π"),
        (6, 9, "upcoming", "–ß–µ—Ä–µ–∑ 10 –¥–Ω–µ–π"),
        (22, 8, "active", "5 –¥–Ω–µ–π –Ω–∞–∑–∞–¥"),
        (21, 8, "not_applicable", "6 –¥–Ω–µ–π –Ω–∞–∑–∞–¥"),
        (None, None, "not_applicable", "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö"),
    ]
    
    passed = 0
    total = len(test_cases)
    
    for i, (day, month, expected, desc) in enumerate(test_cases, 1):
        print(f"–¢–µ—Å—Ç {i}: {desc}")
        print(f"  –î–∞—Ç–∞: {day}.{month if month else 'N/A'}")
        
        try:
            result = calculate_birthday_discount_status(day, month, test_date)
            actual = result['status']
            days_until = result.get('days_until_birthday')
            
            if actual == expected:
                print(f"  ‚úÖ –£–°–ü–ï–• ({actual})")
                if days_until is not None:
                    print(f"     –î–Ω–µ–π –¥–æ –î–†: {days_until}")
                passed += 1
            else:
                print(f"  ‚ùå –ü–†–û–í–ê–õ (–æ–∂–∏–¥–∞–ª—Å—è {expected}, –ø–æ–ª—É—á–µ–Ω {actual})")
                if days_until is not None:
                    print(f"     –î–Ω–µ–π –¥–æ –î–†: {days_until}")
            
            if result['message']:
                print(f"  üìù {result['message'][:60]}...")
                
        except Exception as e:
            print(f"  ‚ùå –û–®–ò–ë–ö–ê: {e}")
        
        print()
    
    print(f"–†–ï–ó–£–õ–¨–¢–ê–¢: {passed}/{total} —Ç–µ—Å—Ç–æ–≤ –ø—Ä–æ–π–¥–µ–Ω–æ")
    return passed == total

if __name__ == "__main__":
    success = test_birthday_function()
    if success:
        print("üéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´ –£–°–ü–ï–®–ù–û!")
    else:
        print("‚ö†Ô∏è –ï–°–¢–¨ –ü–†–û–ë–õ–ï–ú–´ –í –¢–ï–°–¢–ê–•")
    sys.exit(0 if success else 1)